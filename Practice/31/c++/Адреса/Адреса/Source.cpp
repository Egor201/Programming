#include<iostream>
#include<vector>
#include<fstream>

std::ostream& operator<< (std::ostream& out, std::vector<int> &a);

int main() {
	std::vector<int> A;
	std::ofstream out("data.txt");
	for (int i = 0; i < 64; i++) {
		A.push_back(rand() % 100);
		out << A;
	}
	while (size(A) != 1) {
		A.pop_back();
		out << A;
	}
}

std::ostream& operator<< (std::ostream& out, std::vector<int> &a) {
	out << size(a) << "	| ";
	for (int i = 0; i < size(a); i++) {
		out << &a[i] << " ";
	}
	out << std::endl;
	return out;
}

/*
1.
При передаче по ссылке не создаётся копия вектора.
Адреса первых элементов всегда разные, потому что вектор копируется в новый
участок памяти (старый очищается) при добавлении нового элемента, если возможность
расположить элементы последовтально отсутствуют. Поэтому адреса изменяются.
2.
Это зависит от того, был ли вектор перемещён
в новый участок памяти. А он, скорее всего, был перемещён, т.к. маловероятна
возможность последовательного расположения такого кол-ва элементов
3.
Адреса не изменяются, т.к. идёт удаление  элементов, которые уже расположены последовательно,
а значит, нет нужды копировать вектор в новый участок памяти.
4.
При передаче по значению при по попадании в функцию каждый раз создаётся новый вектор,
поэтому адреса разные и при удалении.
*/